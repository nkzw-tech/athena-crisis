import CharacterMessage from '@deities/apollo/CharacterMessage.tsx';
import type { MapMetadata } from '@deities/apollo/MapMetadata.tsx';
import withModifiers from '@deities/athena/lib/withModifiers.tsx';
import MapData from '@deities/athena/MapData.tsx';

export const metadata: MapMetadata = {
  effects: new Map([
    [
      'GameEnd',
      new Set([
        {
          actions: [
            CharacterMessage(
              2,
              "Yes! That will do it! Let's get out of here!",
              'self',
              2,
            ),
          ],
          conditions: [{ type: 'GameEnd', value: 'win' }],
        },
        {
          actions: [
            CharacterMessage(
              2,
              'Hey kid, how about next time you try to build Barracks or a Factory?',
              'self',
              1,
            ),
          ],
          conditions: [{ type: 'GameEnd', value: 'lose' }],
        },
        {
          actions: [
            CharacterMessage(
              1,
              'How about we just sail out of here?',
              'self',
              2,
            ),
            CharacterMessage(
              2,
              'That was a close call. Do you have any idea what is going on here?',
              'self',
              1,
            ),
            CharacterMessage(1, "I'm as surprised as you areâ€¦", 'self', 1),
          ],
          conditions: [{ type: 'GameEnd', value: 1 }],
        },
      ]),
    ],
    [
      'Start',
      new Set([
        {
          actions: [
            CharacterMessage(
              1,
              "Hello there! I'm {name}. This is the Proto Campaign. I was told nothing that happens here has an impact on the Athena Crisis. Or.. does it?",
              'self',
              2,
            ),
            CharacterMessage(
              2,
              'What are you talking about {1.name}? We are surrounded and you think you got time to break the 4th wall? Bazooks!',
              'self',
            ),
            CharacterMessage(
              1,
              'What!? How did we get overrun by enemies?',
              'self',
              1,
            ),
            CharacterMessage(
              15,
              "You aren't getting out of here. Get 'em!",
              'opponent',
              2,
            ),
            CharacterMessage(
              1,
              "I'm not prepared for this. I don't even have any weapons.",
              'self',
            ),
            CharacterMessage(
              2,
              'Let me handle it. How about you build Barracks or a Factory at the Construction Site?',
              'self',
              2,
            ),
            CharacterMessage(
              1,
              'Ok ok, just one more thing: You can long-press anytime on a field to get more information about units or buildings.',
              'self',
            ),
          ],
        },
      ]),
    ],
  ]),
  name: 'Shrine',
  tags: ['campaign', '1', 'reward'],
  teamPlay: false,
};

export default withModifiers(
  MapData.createMap({
    buildings: [
      [
        3,
        10,
        {
          h: 100,
          i: 2,
          p: 1,
        },
      ],
      [
        10,
        9,
        {
          h: 100,
          i: 5,
          l: 1,
          p: 0,
        },
      ],
    ],
    config: {
      biome: 0,
      blocklistedBuildings: [2, 9, 10, 11, 13, 15, 17],
      blocklistedSkills: [],
      blocklistedUnits: [4, 6, 7, 11, 12, 14, 16, 26, 37],
      fog: false,
      multiplier: 1,
      seedCapital: 500,
      winConditions: [
        [0, 0, [0, 1]],
        [1, 0, [1], [1], [0, 2]],
      ],
    },
    decorators: [
      [25, 13, 87],
      [23, 14, 5],
      [28, 15, 6],
      [21, 16, 1],
      [20, 17, 2],
      [21, 17, 56],
      [25, 17, 83],
      [30, 17, 2],
      [31, 18, 3],
      [17, 19, 9],
      [27, 19, 57],
      [30, 19, 59],
      [31, 19, 60],
      [22, 20, 84],
      [31, 20, 57],
      [13, 21, 64],
      [21, 21, 84],
      [29, 21, 12],
      [14, 22, 8],
      [20, 22, 84],
      [26, 22, 11],
      [19, 23, 84],
      [18, 24, 84],
      [18, 25, 84],
      [33, 25, 63],
      [16, 27, 56],
      [17, 27, 87],
      [20, 27, 87],
      [21, 27, 60],
      [17, 30, 105],
      [20, 31, 106],
      [3, 34, 73],
      [3, 35, 73],
      [20, 35, 106],
      [9, 36, 47],
      [16, 40, 77],
      [20, 40, 78],
      [24, 40, 78],
      [28, 40, 78],
      [32, 40, 81],
    ],
    map: [
      6,
      6,
      2,
      5,
      10,
      10,
      10,
      10,
      6,
      6,
      6,
      6,
      6,
      2,
      2,
      5,
      1,
      2,
      2,
      2,
      10,
      6,
      [6, 9],
      6,
      6,
      2,
      5,
      5,
      12,
      3,
      3,
      12,
      2,
      10,
      6,
      6,
      6,
      5,
      5,
      12,
      2,
      1,
      1,
      12,
      12,
      10,
      6,
      [6, 9],
      3,
      5,
      12,
      12,
      1,
      1,
      1,
      1,
      2,
      12,
      6,
      6,
      3,
      5,
      12,
      1,
      1,
      1,
      1,
      1,
      2,
      2,
      10,
      6,
      1,
      5,
      7,
      1,
      1,
      1,
      1,
      2,
      1,
      2,
      1,
      6,
      12,
      5,
      1,
      1,
      4,
      1,
      1,
      1,
      6,
      6,
      6,
      6,
      4,
      [5, 16],
      4,
      4,
      4,
      1,
      8,
      1,
      [6, 14],
      [6, 15],
      6,
      6,
      6,
      5,
      8,
      1,
      1,
      1,
      1,
      1,
      10,
      6,
      6,
      6,
    ],
    size: {
      height: 10,
      width: 12,
    },
    teams: [
      {
        id: 1,
        name: '',
        players: [
          {
            funds: 0,
            id: 1,
            skills: [],
          },
        ],
      },
      {
        id: 2,
        name: '',
        players: [
          {
            funds: 0,
            id: 2,
            skills: [],
          },
        ],
      },
    ],
    units: [
      [
        5,
        8,
        {
          g: 40,
          h: 100,
          i: 1,
          p: 1,
        },
      ],
      [
        7,
        5,
        {
          g: 50,
          h: 100,
          i: 2,
          n: -1,
          p: 1,
        },
      ],
      [
        11,
        6,
        {
          a: [[1, 4]],
          g: 40,
          h: 100,
          i: 3,
          p: 2,
        },
      ],
      [
        6,
        2,
        {
          a: [[1, 4]],
          g: 40,
          h: 100,
          i: 3,
          p: 2,
        },
      ],
      [
        9,
        3,
        {
          a: [[1, 4]],
          g: 30,
          h: 100,
          i: 15,
          p: 2,
        },
      ],
      [
        8,
        7,
        {
          g: 50,
          h: 100,
          i: 2,
          p: 1,
        },
      ],
      [
        4,
        4,
        {
          a: [[1, 4]],
          g: 30,
          h: 100,
          i: 15,
          p: 1,
        },
      ],
    ],
  }),
);
